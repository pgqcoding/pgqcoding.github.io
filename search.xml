<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[IDEA 使用技巧]]></title>
    <url>%2F2020%2F06%2F26%2Ftool-idea.html</url>
    <content type="text"><![CDATA[前言本文记录IDEA的使用技巧及相关配置 1.快捷键a.光标快速切换 HOME键切换到行头 END键切换到行尾 CTRL+HOME键向前切换一个单词 CTRL+END键向后切换一个单词 b.切换TAB ALT+↑键向前切换 ALT+↓键向后切换 c.打开历史浏览文件 CTRL+E键打开历史浏览文件记录 2.断点调试2.1.基本断点 Step Over(F6)执行到当前方法的下一句 Step Info(F5)进入到当前行调用的方法体里面 Step Out(F7)跳出当前执行的方法返回到执行方法的行 Force Step Into(ALT+SHIFT+F7)进入到当前行调用的方法体里面，与step info不同的是后者只能进入到自己写的方法体里面，后者可以进入到jar的方法里或者JDK的方法里面 Run to Cursor(CTRL+R)运行到光标所在处 Resume Program结束当前断点，后续没有断点这则执行完，后续还有断点则直接到该断点 2.2.条件断点 在断点处鼠标右键，在condition中写上断点条件（正常的java语法）2.3.异常断点 在断点管理器中添加Java Exception Breakpoint断点 3.常用插件3.1.代码格式化a.插件名：eclipse code formatterb.配置（见下图）c.其他说明：图中所示eclipse-style.xml文件需要提前下载。如果注释里面的参数在格式化后不希望它换行显示，需要改一下配置。打开eclipse-code-style.xml文件，搜索insert_new_line_for_parameter(大概在434行)，修改配置项总的value值为do not insert 3.2.注释a.插件名：easyjavadocb.配置：默认配置即可c.其他说明：快捷键-ctrl+\ 3.3.提交保存a.插件名：save actionb.配置（见下图）c.其他说明：保存代码自动格式化，自动给出序列化ID，其他配置根据需要勾选]]></content>
      <categories>
        <category>技巧</category>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDE</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux磁盘管理过程]]></title>
    <url>%2F2019%2F12%2F27%2Flinux-disk-manager.html</url>
    <content type="text"><![CDATA[前言本文主要记录linux下磁盘管理过程.适用场景:vm实例创建时分配较少的存储空间,随着时间累积最初分配的存储空间不够用，需要扩容,提供以下方案：1.LVM在线扩容,不需要重启机器,可以挂载在根目录 2.作为数据盘挂载在其他空目录,可能需要格式化,具体需要看是否是全新的磁盘 1.磁盘管理命令1.1.查看相关12345du -sh &lt;目录&gt; // 查看目录大小df -hT // 查看已挂载磁盘信息fdisk -l // 查看所有磁盘信息(包含未挂载磁盘)lsblk // 查看磁盘分区结构vi /etc/fstab // 将挂载信息加入到开启自动挂载 1.2.创建分区123456789101112131415161718192021222324252627282930313233343536373839404142434445464748[root@web ~]# fdisk /dev/sdbDevice contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabelBuilding a new DOS disklabel with disk identifier 0xc5f4d586.Changes will remain in memory only, until you decide to write them.After that, of course, the previous content won't be recoverable.Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)WARNING: DOS-compatible mode is deprecated. It's strongly recommended to switch off the mode (command 'c') and change display units to sectors (command 'u').Command (m for help): n ## 'n'代表新建一个分区Command action e extended p primary partition (1-4)p ## 'e'代表扩展分区,'p'代表主分区(最多四个)Partition number (1-4): 1 ## 选择分区编号First cylinder (1-65270, default 1): ## 选择开始位置,默认即可,直接回车Using default value 1Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-65270, default 65270): +150G ## 分区大小,默认为剩余的全部,可自己输入Command (m for help): t ## 't'代表更换分区类型Selected partition 1 ## 当前需要处理的分区编号,只有一个的话默认1Hex code (type L to list codes): 8e ## 分区类型编号, 8e代表LVM类型, 83代表linux类型Changed system type of partition 1 to 8e (Linux LVM)Command (m for help): n ## 新建一个分区,这个我是想分两个主分区,所以我没有保存继续新建分区Command action e extended p primary partition (1-4)pPartition number (1-4): 2 ## 新建分区编号2First cylinder (19583-65270, default 19583): ## 默认开始位置Using default value 19583Last cylinder, +cylinders or +size&#123;K,M,G&#125; (19583-65270, default 65270): ## 默认剩余的所有空间Using default value 65270Command (m for help): t ## 修改分区类型Partition number (1-4): 2 ## 选择需要处理的分区编号Hex code (type L to list codes): 8e ## 分区类型Changed system type of partition 2 to 8e (Linux LVM)Command (m for help): w ## 分区完成,保存分区The partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks. 2.LVM在线扩容2.1.磁盘分区执行步骤1.2 2.2.创建物理卷通过命令pvcreate &lt;分区&gt;创建物理卷, 通过命令pvdisplay查看物理卷 12[root@local ~]# pvcreate /dev/sdb1Physical volume "/dev/sdb1" successfully created 在这一步我们要拿到现有卷的VG_NAME的值,下一步要用到 1VG Name centos 2.3.加入卷组a.通过命令vgdisplay查看卷组b.通过命令vgextend &lt;在上一步中获取到的VG_NAME&gt; &lt;分区&gt;将物理卷加入卷组 12[root@web ~]# vgextend vg_centos6 /dev/sdb1Volume group "vg_centos6" successfully extended 2.4.扩容通过lvdisplay查看lv_path命令: lvextend -l +100%FREE &lt;lv_path&gt;, 如果有多个lv_path选择带root的 2.5.执行调整这一步与磁盘文件系统有关,如果磁盘文件系统为”ext2、ext3、ext4”,则用命令resize2fs &lt;lv_path&gt;, 如果是xfs文件系统, 这用命令xfs_growfs &lt;lv_path&gt;这里我们使用resize2fs命令 3.挂载数据盘在上面1.2步骤中我们已经创建了sdb2这个分区,现在我们把它当做数据盘挂载到/data目录,注意，最好是挂载到空目录,如果不是空目录挂载好了之后回导致以前的文件不可见，需要特殊处理之后才可见 3.1.格式化分区因为这里的分区是我们新建的,所以挂载之前需要格式化.格式化类型选择etx4,别问为什么,选择就好了命令：mkfs.ext4 /dev/sdb2 3.2.挂载目录命令：mount &lt;分区&gt; &lt;挂载目录&gt;, 1mount /dev/sdb2 /data 3.3.自动挂载编辑/etc/fstab文件, 将分区挂载信息加入到文件中]]></content>
      <categories>
        <category>笔记</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>笔记</tag>
        <tag>磁盘管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows下mysql免安装版本配置]]></title>
    <url>%2F2019%2F12%2F20%2Fmysql-install-win.html</url>
    <content type="text"><![CDATA[前言本博客记录mysql.5.7.28在windows下的安装步骤 1.版本说明及下载mysql官网下载指定版本的zip包 2.配置2.1.解压缩将下载的ZIP包解压缩到安装目录，这里以D:\software\目录为例. 2.2.配置文件如果压缩包里面没有my.ini配置文件,我们需要自己创建一个这里要注意编码,建议用notepad++编辑在my.ini文件里面写入以下内容 123456789101112131415161718192021222324252627282930313233343536# For advice on how to change settings please see# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html# *** DO NOT EDIT THIS FILE. It&apos;s a template which will be copied to the# *** default location during install, and will be replaced if you# *** upgrade to a newer version of MySQL.[client]default-character-set=utf8[mysqld]# Remove leading # and set to the amount of RAM for the most important data# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.# innodb_buffer_pool_size = 128M# Remove leading # to turn on a very important data integrity option: logging# changes to the binary log between backups.# log_bin# These are commonly set, remove the # and set as required.basedir=D:/software/mysqldatadir=D:/software/mysql/datacharacter_set_server=utf8default-storage-engine=INNODBport=3306# server_id = .....# Remove leading # to set options mainly useful for reporting servers.# The server defaults are faster for transactions and fast SELECTs.# Adjust sizes as needed, experiment to find the optimal values.# join_buffer_size=128M# sort_buffer_size=2M# read_rnd_buffer_size=2M sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 2.3.环境变量将mysql目录加入环境变量(非必要,建议加)编辑环境变量中的PATH,并在值后面拼上mysql的bin目录的全路径 2.4.数据库初始化a.安装mysql:mysqld --installb.初始化:mysqld --initialize --user=root --console,这一步会打印日志,我们需要提取日志中root@localhost部分后面的一串字符串，这个字符串为数据库初始密码，后面会用到c.启动mysql:net start mysqld.登录mysql:mysql -uroot -pe.登录上mysql后,其他命令都执行不了,会提示我们需要修改密码.这里我们使用set password for root@localhost = password(&#39;root&#39;);命令修改密码,并使用命令flush privileges刷新权限f.重启mysql:net stop mysql,net start mysql.]]></content>
      <categories>
        <category>教程</category>
        <category>mysql</category>
        <category>安装</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javamail超时排查过程记录]]></title>
    <url>%2F2019%2F12%2F16%2Fjava-mail-question.html</url>
    <content type="text"><![CDATA[前言使用springboot+javamail的时候,偶尔会碰到邮件发送超时问题,特别是部署到生产环境的时候,会发现跟本地环境在时间上有较大出入,这里记录一下问题排查过程 1.日志排查通过排查日志发现邮件发送过程耗时较长,且发送邮件的线程会中途无故被回收,考虑到线程阻塞问题,我们加了如下配置： 123456# 连接超时时间spring.mail.properties.mail.smtp.connectiontimeout=30000# 邮件发送超时时间spring.mail.properties.mail.smtp.timeout=20000# 邮件收取超时时间spring.mail.properties.mail.smtp.writetimeout=20000 2.命令发送邮件通过telnet命令直接发送邮件,在这之前保证telnet命令所在服务器与邮件服务器网络是通的 1234567891011EHLO localhostAUTH LOGINddddddd # 账号的base64dddddd # 密码的base64MAIL FROM: &lt;panggq@aliyun.com&gt;RCPT TO: &lt;ethan-pang@qq.com&gt;DATAFrom: panggq@aliyun.comTo: ethan-pang@qq.comSubject:test111. 3.抓包分析加上配置之后发现并没有改善超时问题,且用telnet命令发送邮件正常,无果我们只能抓包分析请求抓包命令: 注意点tcpdump -i any -w /tmp/file.cap host 192.168.1.122 and tcp port 465通过分析请求包发现客户端在获取hostname时耗时非常长, 另外获取邮件地址耗时也非常长,至此，发现两个耗时长的地方，下面我们一一解决. 4.解决问题 问题一：获取hostname耗时长的问题 通过分析javamail的源码我们知道javamail在获取客户端主机的hostname,可能由于主机的安全策略问题导致这里超时.故找到解决问题的方法,增加配置. 12# 配置hostnamespring.mail.properties.mail.smtp.localhost=localhost 问题二：获取邮件收发人信息耗时长的问题 待解决…^_^]]></content>
      <categories>
        <category>问题排查</category>
        <category>javamail</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>MAIL</tag>
        <tag>问题排查</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux环境下安装配置Nginx]]></title>
    <url>%2F2019%2F11%2F05%2Flinux-nginx-install.html</url>
    <content type="text"><![CDATA[前言这里记录nginx在linux(centos7.x)环境下的安装步骤 1.安装前准备由于我们采用的是源码安装的方式，所以需要在开始之前安装一些必要的依赖，可以直接采用以下命令 12yum -y install gcc gcc-c++ autoconf automake libtool make cmakeyum -y install zlib zlib-devel openssl openssl-devel pcre-devel 2.下载安装a.可以到官网下载源码包，然后通过FTP的方式上传到服务器。b.解压：tar -zvxf &lt;nginx-tar-path&gt; -C /usr/local/c.进入解压后的路径：cd /usr/local/nginx-1.16.1d.配置：./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-pcre.这里安装ssl模块，其他模块类似e.makef.make install 3.命令检查配置：/usr/local/nginx/sbin/nginx -t启动：/usr/local/nginx/sbin/nginx重启：/usr/local/nginx/sbin/nginx -s reload关闭：/usr/local/nginx/sbin/nginx -s stop]]></content>
      <categories>
        <category>教程</category>
        <category>nginx</category>
        <category>安装</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[maven相关知识]]></title>
    <url>%2F2019%2F11%2F05%2Fmaven-command.html</url>
    <content type="text"><![CDATA[前言这里记录Maven日常使用过程的技巧及知识点 1.命令1.1.Maven卡住for /r %i in (*.lastUpdated) do del %i 1.2.本地安装依赖1mvn install:install-file -DgroupId=org.artofsolving.jodconverter -DartifactId=jodconverter-core -Dversion=3.0-beta-4 -Dpackaging=jar -Dfile=C:\Users\lenovo\Desktop\jodconverter-core-3.0-beta-4.jar 1.DgroupId指定依赖的groupId、DartifactId指定依赖的artifactId、Dpackaging指定依赖包的路径、Dversion指定依赖版本2.执行完成后可以到对应路径下查看依赖是否成功，成功则可以在POM文件中按照正常的依赖引入的方式引入3.POM引入报错update一下]]></content>
      <categories>
        <category>笔记</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>笔记</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx使用心得及相关配置]]></title>
    <url>%2F2019%2F09%2F11%2Fnginx-conf.html</url>
    <content type="text"><![CDATA[前言本博客记录nginx的使用场景及技巧心得体会，并附上相关配置 1.灰度发布方案可以采用nginx+cookie的方案实现灰度发布 过程中配置项发现老是报未知指令，在确认版本无误的情况下，可以尝试在报错的行中每个关键字前后加上空格试试]]></content>
      <categories>
        <category>教程</category>
        <category>nginx</category>
        <category>配置</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>conf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云数据库Redis版性能测试报告]]></title>
    <url>%2F2019%2F09%2F03%2Faliyun-redis-performance-test-report.html</url>
    <content type="text"><![CDATA[前言本文以阿里云数据库Redis版为例，参照阿里性能测试白皮书redis性能测试，记录测试步骤及过程理解。其他平台类似产品可以此为例进行性能测试。 1.测试命令及指标1.1.测试命令1./memtier_benchmark -s r-***************.redis.rds.aliyuncs.com -p 6379 -a &lt;password&gt; -c 20 -d 32 --threads=10 --ratio=1:1 --test-time=1800 --select-db=10 1.2.测试指标QPS，Queries Per Second，即数据库每秒处理的请求数。]]></content>
      <categories>
        <category>教程</category>
        <category>redis</category>
        <category>测试报告</category>
      </categories>
      <tags>
        <tag>阿里</tag>
        <tag>云数据库</tag>
        <tag>redis</tag>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安卓模拟器genymotion的SDK下载]]></title>
    <url>%2F2019%2F08%2F26%2Fgenymotion-sdk-download.html</url>
    <content type="text"><![CDATA[前言本博客记录genymotion快速下载SDK的方法 1.找到下载链接这一步是关键步骤，我们可以通过查看genymotion的运行日志看到下载链接。将链接提取出来放到浏览器地址栏直接回车即可下载，或者复制到迅雷这种下载器当中。 a.运行genymotion软件，正常找到你需要下载的虚拟机器，点击安装（下载）。ok，可以放着不管了b.打开C:\Users\Administrator\AppData\Local\Genymobilegenymotion.log文件，搜索日志。一般来讲搜索http://关键词即可，找到最下面的匹配路径即为下载链接。c.将链接复制到浏览器地址栏，回车，可以看到ova正在下载，且速度较快 2.复制文件将下载好的ova文件复制到C:\Users\Administrator\AppData\Local\Genymobile\Genymotion\ova目录下 3.加载虚拟机器打开virtualBox管理器，可以看到你需要的虚拟机器。如果看不到可以手动导入ova文件。接下来关闭genymotion再打开就有虚拟机器可以用了]]></content>
      <categories>
        <category>教程</category>
        <category>安卓</category>
        <category>模拟器下载</category>
      </categories>
      <tags>
        <tag>安卓</tag>
        <tag>模拟器</tag>
        <tag>genymotion</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[spring-boot知识点集锦]]></title>
    <url>%2F2019%2F08%2F19%2Fspring-boot-project-knowledge.html</url>
    <content type="text"><![CDATA[前言这里记录springboot框架的各种知识点 1.配置文件知识点配置session超时时间，注意这里的springboot版本，下面的配置仅支持2.X版本 1server.servlet.session.timeout=7200s]]></content>
      <categories>
        <category>框架</category>
        <category>springboot</category>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>springboot</tag>
        <tag>知识点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[spring-boot项目错误集锦]]></title>
    <url>%2F2019%2F08%2F14%2Fspring-boot-project-error.html</url>
    <content type="text"><![CDATA[前言这里记录springboot项目开发过程中的各种错误 1.pom文件报错pom文件第一行报错：unknow error(见下图)，只需要在POM文件中增加如下代码 12345&lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;!-- 增加下面这一行 --&gt; &lt;maven-jar-plugin.version&gt;3.1.1&lt;/maven-jar-plugin.version&gt;&lt;/properties&gt; 2.启动报错2.1.循环依赖问题错误提示：There is a circular dependency between 7 beans in the application context(见下图)。 原因描述：可能是代码中出现serviceA中注入了serviceB，然后serviceB中又注入了serviceA，这就会导致BEAN加载是不知道先加载那个，出现循环依赖问题 解决方案一：(最快速)给循环注入的所有Bean加上@Lazy注解 解决方案二：（推荐）通过业务解耦的思路，拆分调用方法实现解耦，也就是不让这种循环依赖的问题出现 3.打包报错3.1.跳过测试通常情况下我们的开发环境是不能连上生产库的，所以我们打包的时候如果不跳过测试可能会出现错误。我们可以在POM文件中增加下面的代码以跳过测试步骤 12345&lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;!-- 增加下面这一行 --&gt; &lt;skipTests&gt;true&lt;/skipTests&gt;&lt;/properties&gt;]]></content>
      <categories>
        <category>框架</category>
        <category>springboot</category>
        <category>错误</category>
      </categories>
      <tags>
        <tag>springboot</tag>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[知识储备]]></title>
    <url>%2F2019%2F08%2F12%2FQ-A-highlights.html</url>
    <content type="text"><![CDATA[前言这里记录各种问题及其解答，以此作为知识储备库 1.语言篇1.1.JAVA篇1.2.VUE篇2.框架篇2.1.springcloud篇 1.springcloud用来做什么的，怎么用 2.2.springboot篇2.3.spring篇2.4.mybatis篇2.5.springMVC篇3.中间件篇3.1.REDIS篇 1.redis中有哪几种数据结构，常用那些数据结构，用在什么地方 2.redis中的每种数据结构分别有那些特点 3.redis数组的这种结果底层实现原理是什么 3.2.NGINX篇 1.nginx常被用来做什么事情，扮演什么角色 3.3.ZK篇 1.ZK是用来干什么的 3.4.DUBBO篇 1.dubbo是用来干什么的 3.5.KAFKA篇 1.kafka是用来干什么的 4.数据库篇4.1.MYSQL篇4.2.ORACLE篇5.算法篇5.1.冒泡排序5.2.折半查找5.3.图的遍历6.网络篇6.1.TCP/IP协议]]></content>
      <categories>
        <category>集锦</category>
        <category>知识储备</category>
      </categories>
      <tags>
        <tag>开发知识</tag>
        <tag>集锦</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下安全基线配置]]></title>
    <url>%2F2019%2F08%2F07%2Flinux-security-conf.html</url>
    <content type="text"><![CDATA[前言本文记录linux Centos7.6下安全基线下的配置，每个人理解的安全基线不一定一样，这里以博主理解的进行配置，实际操作过程中可根据情况进行删减配置操作。 1.系统用户及权限1.1.删除不需要的账号a.使用命令cat /etc/passwd检查是否存在以下用户:lp、sync、shutdown、halt、news、uucp、operator、games、gopherb.使用命令userdel [name]删除不需要的用户，其中[name]为用户名。 如果删除games用户时提示不能删除games用户，可以通过删除用户组的方式删除groupdel games c.使用命令usermod -s/dev/null [name]修改默认账户的shell为/dev/null，建议修改的账号为uucp、ftp、news 1.2.用户密码加密机制应确保系统中的所有用户的密码都被shadow机制加密。检查awk -F: &#39;{if($2 !=&quot;x&quot; &amp;&amp; $2 != &quot;*&quot;) print $1}&#39;/etc/passwd的输出，如果输出个别用户可能是/etc/passwd文件被人而已修改，建议删除此账号重建 1.3.账号密码策略设置a.查看相关参数cat /etc/login.defsb.修改配置文件vim /etc/login.defs 123456789101112# 登录密码有效期PASS_MAX_DAYS 180# 登录密码最短修改时间间隔，可以防止非法用户短期内多次修改密码PASS_MIN_DAYS 0# 登录密码最小长度PASS_MIN_LEN 8# 登录密码过期前N天提醒PASS_WARN_AGE 7# 登录错误等待时间N秒FAIL_DELAY 10# 登录错误记录到日志FAILLOG_ENAB yes 1.4.账号锁定策略当用户连续认证失败超过6次后，锁定该用户。查看配置grep retry /etc/pam.d/system-auth，查看retry是否已经设置 1.5.禁止ctrl+alt+del键盘关闭命令在/etc/inittab文件中编辑注释掉ca::ctrlaltdel:/sbin/shutdown-t3 -r now行，直接在前面加上#号就行。为使改动生效，输入命令/sbin/init q 1.6.超时自动注销编辑profile文件vi /etc/profile，在HISTSIZE=后面加入TMOUT=600 1.7.修改history保存命令数保证bashshell保存少量的命令，减少安全隐患。编辑vi /etc/profile，查看HISTSIZE的值，如果已经设置，修改值为30或30以下，如果没有设置则在空白行输入该配置 1.8.检查UID为0的用户保证UID为0的用户只有root一个。执行命令：awk -F:&#39;{if($3==0) print $1}&#39; /etc/passwd&#39;，如果输出除了root之外还有其他用户的话，这编辑/etc/passwd文件，找到对应的用户，修改UID的值 拥有UID=0的用户即拥有了系统最高权限 ###1.9.shell变量检查 执行命令usermod -s /bin/bash root，检查输出。一般正常应该是/bin/bash或者/bin/sh，不应该出现/sbin/nologin或者/dev/null 1.10.环境变量检查root path环境变量中不包含当前目录，防止root执行恶意代码。编辑/etc/profile，找到设置PATH的行，找到其中设置了当前目录符号.的行，并将这个.删除 1.11.远程连接配置检查是否存在.netrc.rhosts这两个文件，如果存在着删除这两个文件。查找命令：find / -name .netrc，find / -name .rhosts 2.文件权限篇2.1.用户umask安全配置严格限制root初始文件的创建权限。对于root，应该设置umask为077。编辑/etc/profile，在文件最后加入umask=077 2.2.文件权限设置检查目录和文件的权限设置 123456/etc/passwd 644/etc/shadow 640/etc/rc3.d 744/etc/profile 744/etc/inet/conf 744/etc/xinet.conf 744 如果不是上述权限，这通过命令chmid 644 /etc/passwd修改文件权限。通过命令chattr +i /etc/passwd防止文件被修改 2.3目录权限检查一般是不允许任何人都有写权限的目录存在的。通过以下命令检查是否存在这样的目录。 1234for A in `awk '($3 == "ext2" || $3 == "ext3") \&#123; print $2 &#125;' /etc/fstab`; dofind $A -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -printDone 2.4.隐藏文件检查通过命令ls -a或者find / -type f &#39;.?*&#39;检查主机系统中是否存在可以隐藏文件，如果存在建议删除。 3.系统内核配置3.1.别名设置对root为ls、rm设置别名。执行命令echo $SHELL，如果输出 csh: #vi ~/.cshrcbash: #vi ~/.bashrc编辑打开的文件，在空白行加入： alias ls=’ls -aol’alias rm=’rm -i’ 3.2.关闭系统core dump状态系统core dump状态中可能包含系统信息，容易被入侵者利用，建议关闭。在/etc/profile中添加ulimit -c0 3.3.su命令设置应该避免任何人可以su为root，减少安全隐患。编辑su文件(vi /etc/pam.d/su)，在开头添加下面的代码 12auth sufficient/lib/security/pam_rootok.soauth required/lib/security/pam_wheel.sogroup=wheel 这里表明只有wheel组的成员可以使用su命令成为root用户。可以通过吧用户增加到wheel组的方式让他可以使用su命令，增加方法：chmod - G10 3.4.系统提示信息修改执行命令vi /etc/rc.d/rc.local，在文件末尾加入以下代码 123echo &gt; /etc/issueecho &gt; /etc/issue.net#rm -f /etc/issue.net /etc/issue 4.系统服务及访问安全4.1.系统最小安装原则主机系统应禁用非必要服务。通过命令chkconfig --list | grep on ̘ awk &#39;{print $1}&#39;检查开启的服务中是否存在非必要服务，存在建议禁用 4.2.ftp账号检查查看cat /etc/ftpusers或者cat /etc/ftpd/ftpusers是否存在以下ftp账户。root/daemon/bin/sys/adm/lp/uucp/nuucp/listen/nobody/noaccess/nobody4 4.3.主机信任关系检查查看/etc/hosts.equiv文件是否存在或者文件内容是否为空]]></content>
      <categories>
        <category>笔记</category>
        <category>linux安全配置</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下安装mysql(tar源码安装方式)]]></title>
    <url>%2F2019%2F08%2F06%2Fmysql-linux-tar-install.html</url>
    <content type="text"><![CDATA[前言本博客记录mysql.5.7.27在linux(CentOS7.6)下的安装步骤 1.版本说明及安装包下载mysql: v5.7.26。这里介绍的是tar源码方式安装，所有需要下载.tar.gz包。点击下载跳转到下载页面linux: CentOS 7.6 64位 2.上传安装包将下载好的安装包上传到服务器的/usr/local/目录下，并通过命令tar -zxvf mysql-5.7.27-linux-glibc2.12-i686.tar.gz解压缩到本目录，将解压后的文件通过mv命令重命名为mysql 3.创建用户组并赋权1234groupadd mysqluseradd -r -g mysql mysqlchown -R mysql mysql/chgrp -R mysql mysql/ 4.编辑配置文件1234567891011121314151617181920212223242526272829303132333435363738vim /etc/my.cnf# 复制粘贴一下内容，部分路径需要修改为自己的路径[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/dataport=3306# server_id = .....socket=/tmp/mysql.sockcharacter-set-server=utf8log-error=/usr/local/mysql/log/error.logpid-file=/usr/local/mysql/mysqld/mysql.pid# Remove leading # to set options mainly useful for reporting servers.# The server defaults are faster for transactions and fast SELECTs.# Adjust sizes as needed, experiment to find the optimal values.symbolic-links=0lower_case_table_names=1explicit_defaults_for_timestamp=true# join_buffer_size = 128M# sort_buffer_size = 2M# read_rnd_buffer_size = 2Minnodb_buffer_pool_size=2Ginnodb_log_file_size=256Mmax_connections=300innodb_flush_log_at_trx_commit=2default-storage-engine=INNODBcharacter-set-server=utf8collation-server=utf8_general_ci[client]default-character-set=utf8default-time_zone=&apos;+8:00&apos;sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION 5.初始化数据库a.通过命令安装libaio，命令：yum install libaiob.创建日志文件，注意这里的日志文件对应配置中的log-error属性的值c.进入上面创建的日志文件所在目录授权，命令:chmod 777 error.log，chown mysql:mysql error.logd.初始化数据库，注意检查命令中的路径情况。命令：/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --lc_messages_dir=/usr/local/mysql/share --lc_messages=en_US 6.获取初始密码经过上述步骤初始化数据库后，可以通过命令cat /usr/local/mysql/log/error.log查看密码。日志文件中找到root@localhost:这里放的就是初始密码 7.启动服务修改密码123456789101112131415161718192021# 进入mysql根目录cd /usr/local/mysql/# 创建文件夹mkdir mysqld# 授权chmod 644 mysqld# 创建pid文件cd mysqldvim mysql.pid # 不需要写入任何内容直接保存退出# 授权chmod 644 mysql.pidchown mysql:mysql mysql.pid# 启动mysql服务/usr/local/mysql/support-files/mysql.server start# 通过上面提到的密码进入mysql/usr/local/mysql/bin/mysql -uroot -p 上面提到的密码# 进入mysql后，首先要重置密码(必要)set password=password('新密码');UPDATE `mysql`.`user` SET `Host` = '%', `User` = 'root' WHERE (`Host` = 'localhost') AND (`User` = 'root');flush privileges; 到这一步就可以检查是否可以远程连接了 8.开机自启(centos 7.X)a.创建启动文件touch /usr/lib/systemd/system/mysql.serviceb.编辑配置文件：vim /usr/lib/systemd/system/mysql.service将下面的配置信息复制粘贴到文件中，注意修改ExecStart的属性值，改成自己的路径。其他的不用修改 123456789101112131415161718[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnfLimitNOFILE = 5000#Restart=on-failure#RestartPreventExitStatus=1#PrivateTmp=false c.通过systemctl启动mysqlsystemctl start mysql.serviced.配置开机启动systemctl enable mysql.service，如果不需要开机启动则使用命令systemctl disable mysql.service]]></content>
      <categories>
        <category>教程</category>
        <category>mysql</category>
        <category>安装</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下jdk的安装与配置]]></title>
    <url>%2F2019%2F08%2F05%2Fjdk-linux-install.html</url>
    <content type="text"><![CDATA[前言本博客记录jdk在linux(CentOS)下的安装步骤 1.安装包下载本文记录的是解压缩安装的方式。下载安装包 注意下载对应环境下的安装包，以.tar.gz结尾 2.解压缩解压缩到指定目录，命令：tar -zvxf &lt;jdk-path&gt; -C /usr/local/ 3.配置环境变量编辑配置文件，命令：vi /etc/profile在文件木屋增加如下配置 12345JAVA_HOME=/usr/java/jdk1.8.0_221JRE_HOME=/usr/java/jdk1.8.0_221/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATH 4.配置生效命令：source /etc/profile 4.验证配置命令：java -version]]></content>
      <categories>
        <category>教程</category>
        <category>jdk</category>
        <category>安装</category>
      </categories>
      <tags>
        <tag>jdk</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux centos下nginx的安装与配置]]></title>
    <url>%2F2019%2F08%2F05%2Fnginx-linux-install.html</url>
    <content type="text"><![CDATA[前言本博客记录nginx在linux(CentOS)下的安装步骤 1.版本说明及安装包下载nginx: 建议下载最新稳定版下载 linux: CentOS 7.6 64位 2.步骤2.1.安装依赖通过yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel安装依赖 2.2.解压缩安装包 将下载好的依赖包通过winSCP这一类的工具上传到服务器的根目录 通过tar -xzvf nginx-1.16.0.tar.gz -C /usr/local命令解压缩文件到指定目录 cd /usr/local/nginx-1.16.0，执行编译安装前配置，指定安装路径和需要安装的模块(ssl)./configure --prefix=/usr/local/nginx --with-http_ssl_module 2.3.编译&amp;安装进入到解压后的目录，通过make &amp;&amp; make install命令可以进行编译并且安装 修改nginx配置，启动nginx即可查看是否安装成功 2.4.配置2.4.1.nginx配置成服务centos 6.x下a.在/etc/init.d下创建nginx，命令：vim /etc/init.d/nginx，按下i键进入编辑模式，将文档下的配置代码修改后粘入，按下ESC后，再按下:wq保存退出编辑 需要修改的内容nginx=”path”修改为nginx的执行文件的路径，如果按照上面的步骤，则路径为/usr/local/nginx/sbin/nginxNGINX_CONF_FILE=”path”修改为nginx的配置文件的路径，如果按照上面的配置，则路径为/usr/local/nginx/conf/conf.conf b.给/etc/init.d/nginx文件增加执行权限，命令：chmod a+x /etc/init.d/nginx c.将nginx服务加入chkconfig管理列表，命令：chkconfig --add /etc/init.d/nginx，至此，就可以通过service nginx &lt;start | stop | restart&gt;管理nginx服务了 d.设置开机自启，命令：chkconfig nginx on centos 7.x下a.编辑自定义服务脚本，命令：vi /usr/lib/systemd/system/nginx.service，复制粘贴下面的代码 1234567891011121314151617181920212223242526[Unit]Description=nginx serviceAfter=network.target[Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginxExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s quitPrivateTmp=true[Install]WantedBy=multi-user.target b.文件赋权，命令：chmod +x /usr/lib/systemd/system/nginx.service c.重启systemctl，命令：systemctl daemon-reload d.设置开机启动，命令：systemctl enable nginx.service 其他命令： 1234567891011121314systemctl start nginx.service #启动nginx服务systemctl stop nginx.service #停止服务systemctl restart nginx.service #重新启动服务systemctl list-units --type=service #查看所有已启动的服务systemctl status nginx.service #查看服务当前状态systemctl enable nginx.service #设置开机自启动systemctl disable nginx.service #停止开机自启动 过程中如果执行命令不成功可以尝试传统方法彻底关闭nginx服务，然后再尝试使用上述命令进行相关操作]]></content>
      <categories>
        <category>教程</category>
        <category>nginx</category>
        <category>安装</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo学习]]></title>
    <url>%2F2019%2F07%2F08%2Fhexo-learning.html</url>
    <content type="text"><![CDATA[前言这里是文章的摘要 1.注意类标签1.1.样式一 这里是注释样式这里是注释样式这里是注释样式 1.2.样式二 这里是默认样式这里是注释样式这里是注释样式 1.3.样式三 info Header这里是默认样式Welcome to Hexo! 2.label标签1.1.样式一这里是label标签的样式,这里是注意点也是注意点,success的注意点:也是注意点info级别的注意点:也是注意点warn级别的注意点：也是注意点错误 正确 3.code美化1234scp root@ip:/path pathscp root@ip:/path pathscp root@ip:/path pathscp root@ip:/path path 3.1.压缩部署1hexo g -d &amp;&amp; gulp 3.1.行代码样式hexo g -d &amp;&amp; gulp 4.其他]]></content>
      <categories>
        <category>学习</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令笔记]]></title>
    <url>%2F2019%2F07%2F08%2Flinux-command.html</url>
    <content type="text"><![CDATA[1.系统文件相关操作命令1.1.文件重命名/文件移动1mv &lt;源文件&gt; &lt;目标文件&gt; e.g: mv test.txt text1.txt 1.2.文件删除命令1rm &lt;文件&gt; e.g: rm test.txt 1.3.文件复制命令1cp &lt;源文件&gt; &lt;目标文件&gt; e.g: cp test.txt test1.txt 1.4.创建文件夹命令1mkdir &lt;文件夹&gt; e.g: mkdir test 1.5.按照文件名查找文件命令（模糊查找）1find &lt;查询根路径&gt; -name &apos;*关键字*&apos; e.g: find / -name ‘test’ 1.6.文件编辑命令-vi12345vi &lt;文件&gt;&lt;!--1. 按下insert键进入到编辑模式2. 编辑好后按下ESC，输入*==:wq==*保存修改并退出.输入*==:q!==*忽略修改强制退出--&gt; 2.系统操作相关命令2.1查看端口情况12345netstat -tunlp|grep &lt;端口号&gt;// windows下netstat -ano|findstr &quot;5601&quot;// 查看端口tasklist|findstr &quot;1832&quot;// 查看那个应用使用该端口 2.2查看某个服务是否存在进程12345ps -ef |grep &lt;服务&gt;&lt;!--结果中每列分别代表的意思==进程用户==/==进程ID==/==父进程ID==/==CPU调度情况==/==进程启动时间==/==启动进程的终端==/==进程公占用CPU==/==进程启动命令==--&gt; 2.3强制杀掉进程1kill -9 &lt;进程ID&gt; 查看(修改)系统时间12datedate -s &apos;新时间&apos; 2.4.动态日志查看1234tail -f &lt;-n 行数&gt; &lt;文件&gt;&lt;!--1. *==-n 40==*代表监控末尾40行日志--&gt; 远程机器通过ssh登录1ssh ip 2.5.拷贝远程文件到本地-scp1scp root@192.168.1.1:/abc/ddd/text.txt /本地目录 2.6.拷贝本地文件到远程-scp1scp /本地目录 root@192.168.1.1:/abc/ddd/text.txt 2.7.拷贝远程文件夹到本地-scp1scp *==-r==* root@192.168.1.1:/abc/ddd/text.txt /本地目录 2.8.拷贝本地文件夹到远程-scp1scp *==-r==* /本地目录 root@192.168.1.1:/abc/ddd/text.txt 2.9.通过关键词筛选日志1234&lt;!--得到关键词日志所在行号--&gt;cat -n 日志文件 |grep &apos;关键词&apos;&lt;!--查看第100行前后10行的日志--&gt;cat -n error.log |tail -n +90 |head -n 20 2.10.给某个文件添加可执行权限12345678chmod +x &lt;文件&gt;r 读权限 4w 写权限 2x 操作权限 1权限一共10位，第一位代表类型，2-4位代表所有者权限，5-7代表群组权限，8-10代表其他人举例：-rwxrwxrwx 777-rwx-w-r-x 725 2.11.定时任务1.查看定时任务 1crontab -l 2.编辑定时任务(进入后按照vi命令的格式操作),命令为：* * * * * /脚本路径 1crontab -e 2.12.shell脚本语法检查1sh -n ***.sh 2.13.运行跟踪1sh -vx ***.sh 2.15.centos防火墙a.7.X版本 开放端口123456// 开放端口firewall-cmd --permanent --zone=public --add-port=9200/tcp// 查询端口是否开放firewall-cmd --query-port=9200/tcp// 重启防火墙firewall-cmd --reload b.6.X版本列出所有端口netstat -ntlp 开启端口:方法一 undefined 开启端口:方法二 12vi /etc/sysconfig/iptables 打开配置文件加入如下语句:-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT 重启防火墙，修改完成 关闭端口:方法一 undefined 关闭端口:方法二 12vi /etc/sysconfig/iptables 打开配置文件加入如下语句:-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP 重启防火墙，修改完成 查看端口状态/etc/init.d/iptables status 关闭防火墙,centos的关闭：service iptables stop 开启ping 123456// 编辑/etc/sysctl.conf文件// 新增或修改：// 关闭net.ipv4.icmp_echo_ignore_all=1// 开启net.ipv4.icmp_echo_ignore_all=0]]></content>
      <categories>
        <category>笔记</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>命令</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql常用命令笔记]]></title>
    <url>%2F2019%2F07%2F08%2Fmysql-command.html</url>
    <content type="text"><![CDATA[前言记录Mysql相关命令及SQL的操作及知识 1.mysql操作命令1.1.查看表结构1desc table 1.2.查看所有库1show databases 1.3.查看库里面所有表1show tables 1.4.新建库1CREATE DATABASE test DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; 1.5.执行sql文件1source /sqlfile.sql 2.用户授权相关操作1grant select,insert,update,delete,create,drop on databsee.* to user@localhost; 在后面接上identified by ‘passwd’代表床垫用户密码并授权 3.锁及事务查看及解释查看当前存在的锁信息 1SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCKS; 这里需要补充解释 查看事务状态信息 1SELECT * FROM INFORMATION_SCHEMA.INNODB_TRX; 这里需要补充解释 4.导出相关 注意，在linux命令行下输入以下命令 4.1.导出数据为SQLa.导出所有数据 1mysqldump -u userName -p dabaseName &gt; fileName.sql b.导出某个表的数据 1mysqldump -u userName -p dabaseName tableName &gt; fileName.sql c.导出所有表结构 1mysqldump -u userName -p -d dabaseName &gt; fileName.sql d.导出某个表的表结构 1mysqldump -u userName -p -d dabaseName tableName &gt; fileName.sql 5.特殊SQL5.1.新增同一个库之间两个具有完全相同字段的不同表之间数据同步可以用一下SQL实现 1insert into taba selete * from tabb 5.2.查看连接数123456SELECTsubstring_index(HOST, &apos;:&apos;, 1) AS HOST, count(0) countFROM information_schema.PROCESSLISTGROUP BY substring_index(HOST, &apos;:&apos;, 1);]]></content>
      <categories>
        <category>笔记</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>笔记</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo admin create first post]]></title>
    <url>%2F2019%2F07%2F08%2FHexo-admin-create-first-post-1.html</url>
    <content type="text"><![CDATA[mysql 相关SQL相关 find_in_set(‘带比较字符串’, ‘字符串集合’) 命令相关 查看表结构： desc 表名 用户授权：grant select,insert,update,delete,create,drop on database.* to user@localhost identified by ‘passwd’; 修改结束符：delimiter // 调用存储过程：call fun_name() 加上 identified by ‘passwd’ 代表授权同时创建用户密码 刷新授权：flush privileges; 显示授权：show grants for user@localhost; 移除用户：revoke delete on . from ‘jack’@’localhost’; 删除用户及授权：drop user ‘jack’@’localhost’; 修改用户名：rename user ‘jack’@’%’ to ‘jim’@’%’; 修改密码：SET authentication_string FOR ‘root’@’localhost’ = authentication_string (‘123456’); 日志管理：show variables LIKE ‘%general%’; set global general_log=ON; 查看所有进程：show full processlist; 杀死进程：kill id global general_log=ON 会很耗费性能，平时建议关闭 导出结果集（可解决中文乱码问题）：select * from table into outfile ‘’ CHARACTER SET gbk; 查看是否有权限-&gt; SHOW VARIABLES LIKE “secure_file_priv”; linux 命令文件操作 文件重命名/文件移动：mv 【源文件】 【新文件】 文件删除： rm 【文件】 文件复制： cp 【源文件】 【新文件】 创建文件夹： mkdir 【文件夹名称】 模糊查找：find 路径 -name ‘*关键字*‘ 在本目录下查找: find ./ -name ‘关键字’ 编辑文件：vi [文件] 1.按下insert进入编辑2.按下ESC, :wq 保存退出, :q! 忽略修改强制退出 系统操作命令 文件模块查找： find 【根路径】 -name ‘ *关键字* ‘ 查看系统服务状态： service 【服务名】 status 查看进程端口使用情况： netstat - tunlp | grep 8080 强制杀掉进程： kill -9 【进程ID】 查看系统时间： date 修改系统时间： date -s ‘ 新时间 ‘ 查看动态日志：tail -f 【-n】 【40】 filename 40代表监视末尾40行，前面配合-n使用 远程登录： ssh ip 文件远程下载： 本机 scp root(登录名)@10.12.13.14（远程IP）:(远程文件路径) (本机下载文件路径) 文件远程上传： 本机 scp （本机文件） /test.txt root@10.12.13.14:(上传路径) 文件夹远程下载： 本机 scp -r root(登录名)@10.12.13.14（远程IP）:(远程文件路径) (本机下载文件路径)本机 scp （本机文件） /test.txt root@10.12.13.14:(上传路径) 文件夹远程上传： 本机 -r scp （本机文件） /test.txt root@10.12.13.14:(上传路径) 筛选日志：cat 日志 | grep ‘关键词’ 查看关键词出现的行号：cat -n 日志 | grep ‘关键词’ 查看102行的前十行后十行：cat -n error.log |tail -n +92|head -n 20 nslookup ums.cmhk.com 解析域名-ip 查看某个服务是否存在进程：ps -ef|grep [服务] 每列分别代表的意思：进程用户 进程ID 父进程ID CPU调度情况 进程启动时间 启动进程的终端 进程共占用CPU 进程启动的命令 某个文件添加可执行权限(x): chmod +x [文件名] maven相关 下载卡住：for /r %i in (*.lastUpdated) do del %i 安装本地jar:mvn install:install-file -DgroupId=org.artofsolving.jodconverter -DartifactId=jodconverter-core -Dversion=3.0-beta-4 -Dpackaging=jar -Dfile=C:\Users\lenovo\Desktop\jodconverter-core-3.0-beta-4.jar nginx相关 查看配置：/usr/local/nginx/sbin/nginx -t 重启：/usr/local/nginx/sbin/nginx -s reload 启动：/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf 软件使用心得标题快捷键 一级菜单（#） 二级菜单（##） 三级菜单（##） …后面以此类推 无序列表 ‘+‘代表无序列表 注意 这个是注意的写法]]></content>
  </entry>
</search>
